# Send commands to the moveit_plan server
#
# Enum values that define the commands available for the server. Note that all
# ee_poses (defined in the 'ee_arm_link' frame) are relative to the 'world' frame.
# There are 4 options:
#   1) CMD_PLAN_POSE - Desired ee_pose which is made up of a position and orientation element
#   2) CMD_PLAN_POSITION - Desired ee_position which is made up of a position element only; orientation is not constrained
#   3) CMD_PLAN_ORIENTATION - Desired ee_orientation which is made up of an orientation element only; position is not constrained
#   4) CMD_EXECUTE - Once a plan is available, this command executes the planned trajectory on the gazebo or physical robot
int8 CMD_PLAN_POSE = 1
int8 CMD_PLAN_POSITION = 2
int8 CMD_PLAN_ORIENTATION = 3
int8 CMD_EXECUTE = 4
int8 CMD_CONTROL_CAMERA_ANGLE = 5
int8 CMD_PLAN_JOINT_POSE = 6
int8 CMD_PLAN_JOINT_POSE_TO_HOME = 7
int8 CMD_PLAN_JOINT_POSE_TO_SLEEP = 8
int8 CMD_OPEN_GRIPPER = 9
int8 CMD_CLOSE_GRIPPER = 10
int8 CMD_PICK_UP = 11
int8 CMD_PICK_UP_TEST = 12
int8 cmd

# get the angle for pan_link to control the view of camera
std_msgs/Float64 camera_angle

float64[] joint_vector

# desired ee_pose, position, or orientation
geometry_msgs/Pose ee_pose

# desired tennis ball position
geometry_msgs/PointStamped tennis_position
---
# message if the planning or execution was successful; this is displayed in the custom GUI.
std_msgs/String msg


# boolean to easily check if the planning or execution was successful.
bool success
